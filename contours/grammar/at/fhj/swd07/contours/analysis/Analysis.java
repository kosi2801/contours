/* This file was generated by SableCC (http://www.sablecc.org/). */

package at.fhj.swd07.contours.analysis;

import at.fhj.swd07.contours.node.*;

public interface Analysis extends Switch
{
    Object getIn(Node node);
    void setIn(Node node, Object o);
    Object getOut(Node node);
    void setOut(Node node, Object o);

    void caseStart(Start node);
    void caseAFormatDefinition(AFormatDefinition node);
    void caseAFormatHeader(AFormatHeader node);
    void caseADefinitionPackageIdentifier(ADefinitionPackageIdentifier node);
    void caseAOutputPath(AOutputPath node);
    void caseAStartComponent(AStartComponent node);
    void caseAComponentDefinitions(AComponentDefinitions node);
    void caseAIdComponentDefinition(AIdComponentDefinition node);
    void caseAComponentDefinitionElementComponentDefinitionList(AComponentDefinitionElementComponentDefinitionList node);
    void caseAComponentDefinitionListComponentDefinitionList(AComponentDefinitionListComponentDefinitionList node);
    void caseAComponentComponentDefinitionElement(AComponentComponentDefinitionElement node);
    void caseAEofComponentDefinitionElement(AEofComponentDefinitionElement node);
    void caseAMultiplierComponentElementMultiplierOrContextName(AMultiplierComponentElementMultiplierOrContextName node);
    void caseAContextNameComponentElementMultiplierOrContextName(AContextNameComponentElementMultiplierOrContextName node);
    void caseAStaticTextComponentElementType(AStaticTextComponentElementType node);
    void caseAStaticHexComponentElementType(AStaticHexComponentElementType node);
    void caseATypeComponentElementType(ATypeComponentElementType node);
    void caseAComponentComponentElementType(AComponentComponentElementType node);
    void caseAByteElementType(AByteElementType node);
    void caseAIntegerElementType(AIntegerElementType node);
    void caseALongElementType(ALongElementType node);
    void caseABcdElementType(ABcdElementType node);
    void caseAStaticMultiplierComponentElementMultiplier(AStaticMultiplierComponentElementMultiplier node);
    void caseAContextMultiplierComponentElementMultiplier(AContextMultiplierComponentElementMultiplier node);
    void caseAComponentElementName(AComponentElementName node);
    void caseAComponentElementContextName(AComponentElementContextName node);

    void caseTDefinitionIdentifier(TDefinitionIdentifier node);
    void caseTStart(TStart node);
    void caseTOutputPath(TOutputPath node);
    void caseTEof(TEof node);
    void caseTByte(TByte node);
    void caseTInteger(TInteger node);
    void caseTLong(TLong node);
    void caseTBcd(TBcd node);
    void caseTDot(TDot node);
    void caseTComma(TComma node);
    void caseTColon(TColon node);
    void caseTLParen(TLParen node);
    void caseTRParen(TRParen node);
    void caseTLBrace(TLBrace node);
    void caseTRBrace(TRBrace node);
    void caseTDotdot(TDotdot node);
    void caseTLBracket(TLBracket node);
    void caseTRBracket(TRBracket node);
    void caseTSemicolon(TSemicolon node);
    void caseTDefinitionSeparator(TDefinitionSeparator node);
    void caseTIdentifier(TIdentifier node);
    void caseTPackageIdentifier(TPackageIdentifier node);
    void caseTCharacterLiteral(TCharacterLiteral node);
    void caseTIntegerLiteral(TIntegerLiteral node);
    void caseTHexLiteral(THexLiteral node);
    void caseTHexByte(THexByte node);
    void caseTComment(TComment node);
    void caseTBlanks(TBlanks node);
    void caseEOF(EOF node);
}
