/* This file was generated by SableCC (http://www.sablecc.org/). */

package at.fhj.swd07.contours.analysis;

import java.util.*;
import at.fhj.swd07.contours.node.*;

public class AnalysisAdapter implements Analysis
{
    private Hashtable<Node,Object> in;
    private Hashtable<Node,Object> out;

    public Object getIn(Node node)
    {
        if(this.in == null)
        {
            return null;
        }

        return this.in.get(node);
    }

    public void setIn(Node node, Object o)
    {
        if(this.in == null)
        {
            this.in = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.in.put(node, o);
        }
        else
        {
            this.in.remove(node);
        }
    }

    public Object getOut(Node node)
    {
        if(this.out == null)
        {
            return null;
        }

        return this.out.get(node);
    }

    public void setOut(Node node, Object o)
    {
        if(this.out == null)
        {
            this.out = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.out.put(node, o);
        }
        else
        {
            this.out.remove(node);
        }
    }

    public void caseStart(Start node)
    {
        defaultCase(node);
    }

    public void caseAFormatDefinition(AFormatDefinition node)
    {
        defaultCase(node);
    }

    public void caseAFormatHeader(AFormatHeader node)
    {
        defaultCase(node);
    }

    public void caseADefinitionPackageIdentifier(ADefinitionPackageIdentifier node)
    {
        defaultCase(node);
    }

    public void caseAOutputPath(AOutputPath node)
    {
        defaultCase(node);
    }

    public void caseAStartComponent(AStartComponent node)
    {
        defaultCase(node);
    }

    public void caseAComponentDefinitions(AComponentDefinitions node)
    {
        defaultCase(node);
    }

    public void caseAIdComponentDefinition(AIdComponentDefinition node)
    {
        defaultCase(node);
    }

    public void caseAComponentDefinitionElementComponentDefinitionList(AComponentDefinitionElementComponentDefinitionList node)
    {
        defaultCase(node);
    }

    public void caseAComponentDefinitionListComponentDefinitionList(AComponentDefinitionListComponentDefinitionList node)
    {
        defaultCase(node);
    }

    public void caseAComponentComponentDefinitionElement(AComponentComponentDefinitionElement node)
    {
        defaultCase(node);
    }

    public void caseAEofComponentDefinitionElement(AEofComponentDefinitionElement node)
    {
        defaultCase(node);
    }

    public void caseAMultiplierComponentElementMultiplierOrContextName(AMultiplierComponentElementMultiplierOrContextName node)
    {
        defaultCase(node);
    }

    public void caseAContextNameComponentElementMultiplierOrContextName(AContextNameComponentElementMultiplierOrContextName node)
    {
        defaultCase(node);
    }

    public void caseAStaticTextComponentElementType(AStaticTextComponentElementType node)
    {
        defaultCase(node);
    }

    public void caseAStaticHexComponentElementType(AStaticHexComponentElementType node)
    {
        defaultCase(node);
    }

    public void caseATypeComponentElementType(ATypeComponentElementType node)
    {
        defaultCase(node);
    }

    public void caseAComponentComponentElementType(AComponentComponentElementType node)
    {
        defaultCase(node);
    }

    public void caseAByteElementType(AByteElementType node)
    {
        defaultCase(node);
    }

    public void caseAIntegerElementType(AIntegerElementType node)
    {
        defaultCase(node);
    }

    public void caseALongElementType(ALongElementType node)
    {
        defaultCase(node);
    }

    public void caseABcdElementType(ABcdElementType node)
    {
        defaultCase(node);
    }

    public void caseAStaticMultiplierComponentElementMultiplier(AStaticMultiplierComponentElementMultiplier node)
    {
        defaultCase(node);
    }

    public void caseAContextMultiplierComponentElementMultiplier(AContextMultiplierComponentElementMultiplier node)
    {
        defaultCase(node);
    }

    public void caseAComponentElementName(AComponentElementName node)
    {
        defaultCase(node);
    }

    public void caseAComponentElementContextName(AComponentElementContextName node)
    {
        defaultCase(node);
    }

    public void caseTDefinitionIdentifier(TDefinitionIdentifier node)
    {
        defaultCase(node);
    }

    public void caseTStart(TStart node)
    {
        defaultCase(node);
    }

    public void caseTOutputPath(TOutputPath node)
    {
        defaultCase(node);
    }

    public void caseTEof(TEof node)
    {
        defaultCase(node);
    }

    public void caseTByte(TByte node)
    {
        defaultCase(node);
    }

    public void caseTInteger(TInteger node)
    {
        defaultCase(node);
    }

    public void caseTLong(TLong node)
    {
        defaultCase(node);
    }

    public void caseTBcd(TBcd node)
    {
        defaultCase(node);
    }

    public void caseTDot(TDot node)
    {
        defaultCase(node);
    }

    public void caseTComma(TComma node)
    {
        defaultCase(node);
    }

    public void caseTColon(TColon node)
    {
        defaultCase(node);
    }

    public void caseTLParen(TLParen node)
    {
        defaultCase(node);
    }

    public void caseTRParen(TRParen node)
    {
        defaultCase(node);
    }

    public void caseTLBrace(TLBrace node)
    {
        defaultCase(node);
    }

    public void caseTRBrace(TRBrace node)
    {
        defaultCase(node);
    }

    public void caseTDotdot(TDotdot node)
    {
        defaultCase(node);
    }

    public void caseTLBracket(TLBracket node)
    {
        defaultCase(node);
    }

    public void caseTRBracket(TRBracket node)
    {
        defaultCase(node);
    }

    public void caseTSemicolon(TSemicolon node)
    {
        defaultCase(node);
    }

    public void caseTDefinitionSeparator(TDefinitionSeparator node)
    {
        defaultCase(node);
    }

    public void caseTIdentifier(TIdentifier node)
    {
        defaultCase(node);
    }

    public void caseTPackageIdentifier(TPackageIdentifier node)
    {
        defaultCase(node);
    }

    public void caseTCharacterLiteral(TCharacterLiteral node)
    {
        defaultCase(node);
    }

    public void caseTIntegerLiteral(TIntegerLiteral node)
    {
        defaultCase(node);
    }

    public void caseTHexLiteral(THexLiteral node)
    {
        defaultCase(node);
    }

    public void caseTHexByte(THexByte node)
    {
        defaultCase(node);
    }

    public void caseTComment(TComment node)
    {
        defaultCase(node);
    }

    public void caseTBlanks(TBlanks node)
    {
        defaultCase(node);
    }

    public void caseEOF(EOF node)
    {
        defaultCase(node);
    }

    public void defaultCase(@SuppressWarnings("unused") Node node)
    {
        // do nothing
    }
}
