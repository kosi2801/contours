/* This file was generated by SableCC (http://www.sablecc.org/). */

package at.fhj.swd07.contours.parser;

import at.fhj.swd07.contours.lexer.*;
import at.fhj.swd07.contours.node.*;
import at.fhj.swd07.contours.analysis.*;
import java.util.*;

import java.io.DataInputStream;
import java.io.BufferedInputStream;
import java.io.IOException;

@SuppressWarnings("nls")
public class Parser
{
    public final Analysis ignoredTokens = new AnalysisAdapter();

    protected ArrayList nodeList;

    private final Lexer lexer;
    private final ListIterator stack = new LinkedList().listIterator();
    private int last_pos;
    private int last_line;
    private Token last_token;
    private final TokenIndex converter = new TokenIndex();
    private final int[] action = new int[2];

    private final static int SHIFT = 0;
    private final static int REDUCE = 1;
    private final static int ACCEPT = 2;
    private final static int ERROR = 3;

    public Parser(@SuppressWarnings("hiding") Lexer lexer)
    {
        this.lexer = lexer;
    }

    protected void filter() throws ParserException, LexerException, IOException
    {
        // Empty body
    }

    private void push(int numstate, ArrayList listNode, boolean hidden) throws ParserException, LexerException, IOException
    {
        this.nodeList = listNode;

        if(!hidden)
        {
            filter();
        }

        if(!this.stack.hasNext())
        {
            this.stack.add(new State(numstate, this.nodeList));
            return;
        }

        State s = (State) this.stack.next();
        s.state = numstate;
        s.nodes = this.nodeList;
    }

    private int goTo(int index)
    {
        int state = state();
        int low = 1;
        int high = gotoTable[index].length - 1;
        int value = gotoTable[index][0][1];

        while(low <= high)
        {
            int middle = (low + high) / 2;

            if(state < gotoTable[index][middle][0])
            {
                high = middle - 1;
            }
            else if(state > gotoTable[index][middle][0])
            {
                low = middle + 1;
            }
            else
            {
                value = gotoTable[index][middle][1];
                break;
            }
        }

        return value;
    }

    private int state()
    {
        State s = (State) this.stack.previous();
        this.stack.next();
        return s.state;
    }

    private ArrayList pop()
    {
        return ((State) this.stack.previous()).nodes;
    }

    private int index(Switchable token)
    {
        this.converter.index = -1;
        token.apply(this.converter);
        return this.converter.index;
    }

    @SuppressWarnings("unchecked")
    public Start parse() throws ParserException, LexerException, IOException
    {
        push(0, null, true);
        List<Node> ign = null;
        while(true)
        {
            while(index(this.lexer.peek()) == -1)
            {
                if(ign == null)
                {
                    ign = new LinkedList<Node>();
                }

                ign.add(this.lexer.next());
            }

            if(ign != null)
            {
                this.ignoredTokens.setIn(this.lexer.peek(), ign);
                ign = null;
            }

            this.last_pos = this.lexer.peek().getPos();
            this.last_line = this.lexer.peek().getLine();
            this.last_token = this.lexer.peek();

            int index = index(this.lexer.peek());
            this.action[0] = Parser.actionTable[state()][0][1];
            this.action[1] = Parser.actionTable[state()][0][2];

            int low = 1;
            int high = Parser.actionTable[state()].length - 1;

            while(low <= high)
            {
                int middle = (low + high) / 2;

                if(index < Parser.actionTable[state()][middle][0])
                {
                    high = middle - 1;
                }
                else if(index > Parser.actionTable[state()][middle][0])
                {
                    low = middle + 1;
                }
                else
                {
                    this.action[0] = Parser.actionTable[state()][middle][1];
                    this.action[1] = Parser.actionTable[state()][middle][2];
                    break;
                }
            }

            switch(this.action[0])
            {
                case SHIFT:
		    {
		        ArrayList list = new ArrayList();
		        list.add(this.lexer.next());
                        push(this.action[1], list, false);
                    }
		    break;
                case REDUCE:
                    switch(this.action[1])
                    {
                    case 0: /* reduce AFormatDefinition */
		    {
			ArrayList list = new0();
			push(goTo(0), list, false);
		    }
		    break;
                    case 1: /* reduce AAformatheader1FormatHeader */
		    {
			ArrayList list = new1();
			push(goTo(1), list, false);
		    }
		    break;
                    case 2: /* reduce AAformatheader2FormatHeader */
		    {
			ArrayList list = new2();
			push(goTo(1), list, false);
		    }
		    break;
                    case 3: /* reduce ADefinitionPackageIdentifier */
		    {
			ArrayList list = new3();
			push(goTo(2), list, false);
		    }
		    break;
                    case 4: /* reduce AOutputPath */
		    {
			ArrayList list = new4();
			push(goTo(3), list, false);
		    }
		    break;
                    case 5: /* reduce AStartComponent */
		    {
			ArrayList list = new5();
			push(goTo(4), list, false);
		    }
		    break;
                    case 6: /* reduce AComponentDefinitions */
		    {
			ArrayList list = new6();
			push(goTo(5), list, false);
		    }
		    break;
                    case 7: /* reduce AIdComponentDefinition */
		    {
			ArrayList list = new7();
			push(goTo(6), list, false);
		    }
		    break;
                    case 8: /* reduce AComponentDefinitionElementComponentDefinitionList */
		    {
			ArrayList list = new8();
			push(goTo(7), list, false);
		    }
		    break;
                    case 9: /* reduce AComponentDefinitionListComponentDefinitionList */
		    {
			ArrayList list = new9();
			push(goTo(7), list, false);
		    }
		    break;
                    case 10: /* reduce AAcomponentcomponentdefinitionelement1ComponentDefinitionElement */
		    {
			ArrayList list = new10();
			push(goTo(8), list, false);
		    }
		    break;
                    case 11: /* reduce AAcomponentcomponentdefinitionelement2ComponentDefinitionElement */
		    {
			ArrayList list = new11();
			push(goTo(8), list, false);
		    }
		    break;
                    case 12: /* reduce AAcomponentcomponentdefinitionelement3ComponentDefinitionElement */
		    {
			ArrayList list = new12();
			push(goTo(8), list, false);
		    }
		    break;
                    case 13: /* reduce AAcomponentcomponentdefinitionelement4ComponentDefinitionElement */
		    {
			ArrayList list = new13();
			push(goTo(8), list, false);
		    }
		    break;
                    case 14: /* reduce AEofComponentDefinitionElement */
		    {
			ArrayList list = new14();
			push(goTo(8), list, false);
		    }
		    break;
                    case 15: /* reduce AMultiplierComponentElementMultiplierOrContextName */
		    {
			ArrayList list = new15();
			push(goTo(9), list, false);
		    }
		    break;
                    case 16: /* reduce AContextNameComponentElementMultiplierOrContextName */
		    {
			ArrayList list = new16();
			push(goTo(9), list, false);
		    }
		    break;
                    case 17: /* reduce AStaticTextComponentElementType */
		    {
			ArrayList list = new17();
			push(goTo(10), list, false);
		    }
		    break;
                    case 18: /* reduce AStaticHexComponentElementType */
		    {
			ArrayList list = new18();
			push(goTo(10), list, false);
		    }
		    break;
                    case 19: /* reduce ATypeComponentElementType */
		    {
			ArrayList list = new19();
			push(goTo(10), list, false);
		    }
		    break;
                    case 20: /* reduce AComponentComponentElementType */
		    {
			ArrayList list = new20();
			push(goTo(10), list, false);
		    }
		    break;
                    case 21: /* reduce AByteElementType */
		    {
			ArrayList list = new21();
			push(goTo(11), list, false);
		    }
		    break;
                    case 22: /* reduce AIntegerElementType */
		    {
			ArrayList list = new22();
			push(goTo(11), list, false);
		    }
		    break;
                    case 23: /* reduce ALongElementType */
		    {
			ArrayList list = new23();
			push(goTo(11), list, false);
		    }
		    break;
                    case 24: /* reduce ABcdElementType */
		    {
			ArrayList list = new24();
			push(goTo(11), list, false);
		    }
		    break;
                    case 25: /* reduce AStaticMultiplierComponentElementMultiplier */
		    {
			ArrayList list = new25();
			push(goTo(12), list, false);
		    }
		    break;
                    case 26: /* reduce AContextMultiplierComponentElementMultiplier */
		    {
			ArrayList list = new26();
			push(goTo(12), list, false);
		    }
		    break;
                    case 27: /* reduce AComponentElementName */
		    {
			ArrayList list = new27();
			push(goTo(13), list, false);
		    }
		    break;
                    case 28: /* reduce AComponentElementContextName */
		    {
			ArrayList list = new28();
			push(goTo(14), list, false);
		    }
		    break;
                    case 29: /* reduce ATerminal$ComponentDefinition */
		    {
			ArrayList list = new29();
			push(goTo(15), list, true);
		    }
		    break;
                    case 30: /* reduce ANonTerminal$ComponentDefinition */
		    {
			ArrayList list = new30();
			push(goTo(15), list, true);
		    }
		    break;
                    }
                    break;
                case ACCEPT:
                    {
                        EOF node2 = (EOF) this.lexer.next();
                        PFormatDefinition node1 = (PFormatDefinition) pop().get(0);
                        Start node = new Start(node1, node2);
                        return node;
                    }
                case ERROR:
                    throw new ParserException(this.last_token,
                        "[" + this.last_line + "," + this.last_pos + "] " +
                        Parser.errorMessages[Parser.errors[this.action[1]]]);
            }
        }
    }



    @SuppressWarnings("unchecked")
    ArrayList new0() /* reduce AFormatDefinition */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PFormatDefinition pformatdefinitionNode1;
        {
            // Block
        PFormatHeader pformatheaderNode2;
        PComponentDefinitions pcomponentdefinitionsNode3;
        pformatheaderNode2 = (PFormatHeader)nodeArrayList1.get(0);
        pcomponentdefinitionsNode3 = (PComponentDefinitions)nodeArrayList2.get(0);

        pformatdefinitionNode1 = new AFormatDefinition(pformatheaderNode2, pcomponentdefinitionsNode3);
        }
	nodeList.add(pformatdefinitionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new1() /* reduce AAformatheader1FormatHeader */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PFormatHeader pformatheaderNode1;
        {
            // Block
        PDefinitionPackageIdentifier pdefinitionpackageidentifierNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        PStartComponent pstartcomponentNode4;
        pdefinitionpackageidentifierNode2 = (PDefinitionPackageIdentifier)nodeArrayList1.get(0);
        pstartcomponentNode4 = (PStartComponent)nodeArrayList2.get(0);

        pformatheaderNode1 = new AFormatHeader(pdefinitionpackageidentifierNode2, null, pstartcomponentNode4);
        }
	nodeList.add(pformatheaderNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new2() /* reduce AAformatheader2FormatHeader */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PFormatHeader pformatheaderNode1;
        {
            // Block
        PDefinitionPackageIdentifier pdefinitionpackageidentifierNode2;
        POutputPath poutputpathNode3;
        PStartComponent pstartcomponentNode4;
        pdefinitionpackageidentifierNode2 = (PDefinitionPackageIdentifier)nodeArrayList1.get(0);
        poutputpathNode3 = (POutputPath)nodeArrayList2.get(0);
        pstartcomponentNode4 = (PStartComponent)nodeArrayList3.get(0);

        pformatheaderNode1 = new AFormatHeader(pdefinitionpackageidentifierNode2, poutputpathNode3, pstartcomponentNode4);
        }
	nodeList.add(pformatheaderNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new3() /* reduce ADefinitionPackageIdentifier */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PDefinitionPackageIdentifier pdefinitionpackageidentifierNode1;
        {
            // Block
        TDefinitionIdentifier tdefinitionidentifierNode2;
        TLParen tlparenNode3;
        TPackageIdentifier tpackageidentifierNode4;
        TRParen trparenNode5;
        TSemicolon tsemicolonNode6;
        tdefinitionidentifierNode2 = (TDefinitionIdentifier)nodeArrayList1.get(0);
        tlparenNode3 = (TLParen)nodeArrayList2.get(0);
        tpackageidentifierNode4 = (TPackageIdentifier)nodeArrayList3.get(0);
        trparenNode5 = (TRParen)nodeArrayList4.get(0);
        tsemicolonNode6 = (TSemicolon)nodeArrayList5.get(0);

        pdefinitionpackageidentifierNode1 = new ADefinitionPackageIdentifier(tdefinitionidentifierNode2, tlparenNode3, tpackageidentifierNode4, trparenNode5, tsemicolonNode6);
        }
	nodeList.add(pdefinitionpackageidentifierNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new4() /* reduce AOutputPath */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        POutputPath poutputpathNode1;
        {
            // Block
        TOutputPath toutputpathNode2;
        TLParen tlparenNode3;
        TCharacterLiteral tcharacterliteralNode4;
        TRParen trparenNode5;
        TSemicolon tsemicolonNode6;
        toutputpathNode2 = (TOutputPath)nodeArrayList1.get(0);
        tlparenNode3 = (TLParen)nodeArrayList2.get(0);
        tcharacterliteralNode4 = (TCharacterLiteral)nodeArrayList3.get(0);
        trparenNode5 = (TRParen)nodeArrayList4.get(0);
        tsemicolonNode6 = (TSemicolon)nodeArrayList5.get(0);

        poutputpathNode1 = new AOutputPath(toutputpathNode2, tlparenNode3, tcharacterliteralNode4, trparenNode5, tsemicolonNode6);
        }
	nodeList.add(poutputpathNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new5() /* reduce AStartComponent */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PStartComponent pstartcomponentNode1;
        {
            // Block
        TStart tstartNode2;
        TLParen tlparenNode3;
        TIdentifier tidentifierNode4;
        TRParen trparenNode5;
        TSemicolon tsemicolonNode6;
        tstartNode2 = (TStart)nodeArrayList1.get(0);
        tlparenNode3 = (TLParen)nodeArrayList2.get(0);
        tidentifierNode4 = (TIdentifier)nodeArrayList3.get(0);
        trparenNode5 = (TRParen)nodeArrayList4.get(0);
        tsemicolonNode6 = (TSemicolon)nodeArrayList5.get(0);

        pstartcomponentNode1 = new AStartComponent(tstartNode2, tlparenNode3, tidentifierNode4, trparenNode5, tsemicolonNode6);
        }
	nodeList.add(pstartcomponentNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new6() /* reduce AComponentDefinitions */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PComponentDefinitions pcomponentdefinitionsNode1;
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        listNode2 = (LinkedList)nodeArrayList1.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }

        pcomponentdefinitionsNode1 = new AComponentDefinitions(listNode3);
        }
	nodeList.add(pcomponentdefinitionsNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new7() /* reduce AIdComponentDefinition */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PComponentDefinition pcomponentdefinitionNode1;
        {
            // Block
        TIdentifier tidentifierNode2;
        TDefinitionSeparator tdefinitionseparatorNode3;
        PComponentDefinitionList pcomponentdefinitionlistNode4;
        TSemicolon tsemicolonNode5;
        tidentifierNode2 = (TIdentifier)nodeArrayList1.get(0);
        tdefinitionseparatorNode3 = (TDefinitionSeparator)nodeArrayList2.get(0);
        pcomponentdefinitionlistNode4 = (PComponentDefinitionList)nodeArrayList3.get(0);
        tsemicolonNode5 = (TSemicolon)nodeArrayList4.get(0);

        pcomponentdefinitionNode1 = new AIdComponentDefinition(tidentifierNode2, tdefinitionseparatorNode3, pcomponentdefinitionlistNode4, tsemicolonNode5);
        }
	nodeList.add(pcomponentdefinitionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new8() /* reduce AComponentDefinitionElementComponentDefinitionList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PComponentDefinitionList pcomponentdefinitionlistNode1;
        {
            // Block
        PComponentDefinitionElement pcomponentdefinitionelementNode2;
        pcomponentdefinitionelementNode2 = (PComponentDefinitionElement)nodeArrayList1.get(0);

        pcomponentdefinitionlistNode1 = new AComponentDefinitionElementComponentDefinitionList(pcomponentdefinitionelementNode2);
        }
	nodeList.add(pcomponentdefinitionlistNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new9() /* reduce AComponentDefinitionListComponentDefinitionList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PComponentDefinitionList pcomponentdefinitionlistNode1;
        {
            // Block
        PComponentDefinitionList pcomponentdefinitionlistNode2;
        TComma tcommaNode3;
        PComponentDefinitionElement pcomponentdefinitionelementNode4;
        pcomponentdefinitionlistNode2 = (PComponentDefinitionList)nodeArrayList1.get(0);
        tcommaNode3 = (TComma)nodeArrayList2.get(0);
        pcomponentdefinitionelementNode4 = (PComponentDefinitionElement)nodeArrayList3.get(0);

        pcomponentdefinitionlistNode1 = new AComponentDefinitionListComponentDefinitionList(pcomponentdefinitionlistNode2, tcommaNode3, pcomponentdefinitionelementNode4);
        }
	nodeList.add(pcomponentdefinitionlistNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new10() /* reduce AAcomponentcomponentdefinitionelement1ComponentDefinitionElement */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PComponentDefinitionElement pcomponentdefinitionelementNode1;
        {
            // Block
        PComponentElementType pcomponentelementtypeNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        @SuppressWarnings("unused") Object nullNode4 = null;
        pcomponentelementtypeNode2 = (PComponentElementType)nodeArrayList1.get(0);

        pcomponentdefinitionelementNode1 = new AComponentComponentDefinitionElement(pcomponentelementtypeNode2, null, null);
        }
	nodeList.add(pcomponentdefinitionelementNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new11() /* reduce AAcomponentcomponentdefinitionelement2ComponentDefinitionElement */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PComponentDefinitionElement pcomponentdefinitionelementNode1;
        {
            // Block
        PComponentElementType pcomponentelementtypeNode2;
        PComponentElementMultiplierOrContextName pcomponentelementmultiplierorcontextnameNode3;
        @SuppressWarnings("unused") Object nullNode4 = null;
        pcomponentelementtypeNode2 = (PComponentElementType)nodeArrayList1.get(0);
        pcomponentelementmultiplierorcontextnameNode3 = (PComponentElementMultiplierOrContextName)nodeArrayList2.get(0);

        pcomponentdefinitionelementNode1 = new AComponentComponentDefinitionElement(pcomponentelementtypeNode2, pcomponentelementmultiplierorcontextnameNode3, null);
        }
	nodeList.add(pcomponentdefinitionelementNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new12() /* reduce AAcomponentcomponentdefinitionelement3ComponentDefinitionElement */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PComponentDefinitionElement pcomponentdefinitionelementNode1;
        {
            // Block
        PComponentElementType pcomponentelementtypeNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        PComponentElementName pcomponentelementnameNode4;
        pcomponentelementtypeNode2 = (PComponentElementType)nodeArrayList1.get(0);
        pcomponentelementnameNode4 = (PComponentElementName)nodeArrayList2.get(0);

        pcomponentdefinitionelementNode1 = new AComponentComponentDefinitionElement(pcomponentelementtypeNode2, null, pcomponentelementnameNode4);
        }
	nodeList.add(pcomponentdefinitionelementNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new13() /* reduce AAcomponentcomponentdefinitionelement4ComponentDefinitionElement */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PComponentDefinitionElement pcomponentdefinitionelementNode1;
        {
            // Block
        PComponentElementType pcomponentelementtypeNode2;
        PComponentElementMultiplierOrContextName pcomponentelementmultiplierorcontextnameNode3;
        PComponentElementName pcomponentelementnameNode4;
        pcomponentelementtypeNode2 = (PComponentElementType)nodeArrayList1.get(0);
        pcomponentelementmultiplierorcontextnameNode3 = (PComponentElementMultiplierOrContextName)nodeArrayList2.get(0);
        pcomponentelementnameNode4 = (PComponentElementName)nodeArrayList3.get(0);

        pcomponentdefinitionelementNode1 = new AComponentComponentDefinitionElement(pcomponentelementtypeNode2, pcomponentelementmultiplierorcontextnameNode3, pcomponentelementnameNode4);
        }
	nodeList.add(pcomponentdefinitionelementNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new14() /* reduce AEofComponentDefinitionElement */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PComponentDefinitionElement pcomponentdefinitionelementNode1;
        {
            // Block
        TEof teofNode2;
        teofNode2 = (TEof)nodeArrayList1.get(0);

        pcomponentdefinitionelementNode1 = new AEofComponentDefinitionElement(teofNode2);
        }
	nodeList.add(pcomponentdefinitionelementNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new15() /* reduce AMultiplierComponentElementMultiplierOrContextName */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PComponentElementMultiplierOrContextName pcomponentelementmultiplierorcontextnameNode1;
        {
            // Block
        PComponentElementMultiplier pcomponentelementmultiplierNode2;
        pcomponentelementmultiplierNode2 = (PComponentElementMultiplier)nodeArrayList1.get(0);

        pcomponentelementmultiplierorcontextnameNode1 = new AMultiplierComponentElementMultiplierOrContextName(pcomponentelementmultiplierNode2);
        }
	nodeList.add(pcomponentelementmultiplierorcontextnameNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new16() /* reduce AContextNameComponentElementMultiplierOrContextName */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PComponentElementMultiplierOrContextName pcomponentelementmultiplierorcontextnameNode1;
        {
            // Block
        PComponentElementContextName pcomponentelementcontextnameNode2;
        pcomponentelementcontextnameNode2 = (PComponentElementContextName)nodeArrayList1.get(0);

        pcomponentelementmultiplierorcontextnameNode1 = new AContextNameComponentElementMultiplierOrContextName(pcomponentelementcontextnameNode2);
        }
	nodeList.add(pcomponentelementmultiplierorcontextnameNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new17() /* reduce AStaticTextComponentElementType */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PComponentElementType pcomponentelementtypeNode1;
        {
            // Block
        TCharacterLiteral tcharacterliteralNode2;
        tcharacterliteralNode2 = (TCharacterLiteral)nodeArrayList1.get(0);

        pcomponentelementtypeNode1 = new AStaticTextComponentElementType(tcharacterliteralNode2);
        }
	nodeList.add(pcomponentelementtypeNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new18() /* reduce AStaticHexComponentElementType */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PComponentElementType pcomponentelementtypeNode1;
        {
            // Block
        THexLiteral thexliteralNode2;
        thexliteralNode2 = (THexLiteral)nodeArrayList1.get(0);

        pcomponentelementtypeNode1 = new AStaticHexComponentElementType(thexliteralNode2);
        }
	nodeList.add(pcomponentelementtypeNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new19() /* reduce ATypeComponentElementType */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PComponentElementType pcomponentelementtypeNode1;
        {
            // Block
        PElementType pelementtypeNode2;
        pelementtypeNode2 = (PElementType)nodeArrayList1.get(0);

        pcomponentelementtypeNode1 = new ATypeComponentElementType(pelementtypeNode2);
        }
	nodeList.add(pcomponentelementtypeNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new20() /* reduce AComponentComponentElementType */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PComponentElementType pcomponentelementtypeNode1;
        {
            // Block
        TIdentifier tidentifierNode2;
        tidentifierNode2 = (TIdentifier)nodeArrayList1.get(0);

        pcomponentelementtypeNode1 = new AComponentComponentElementType(tidentifierNode2);
        }
	nodeList.add(pcomponentelementtypeNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new21() /* reduce AByteElementType */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PElementType pelementtypeNode1;
        {
            // Block
        TByte tbyteNode2;
        tbyteNode2 = (TByte)nodeArrayList1.get(0);

        pelementtypeNode1 = new AByteElementType(tbyteNode2);
        }
	nodeList.add(pelementtypeNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new22() /* reduce AIntegerElementType */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PElementType pelementtypeNode1;
        {
            // Block
        TInteger tintegerNode2;
        tintegerNode2 = (TInteger)nodeArrayList1.get(0);

        pelementtypeNode1 = new AIntegerElementType(tintegerNode2);
        }
	nodeList.add(pelementtypeNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new23() /* reduce ALongElementType */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PElementType pelementtypeNode1;
        {
            // Block
        TLong tlongNode2;
        tlongNode2 = (TLong)nodeArrayList1.get(0);

        pelementtypeNode1 = new ALongElementType(tlongNode2);
        }
	nodeList.add(pelementtypeNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new24() /* reduce ABcdElementType */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PElementType pelementtypeNode1;
        {
            // Block
        TBcd tbcdNode2;
        tbcdNode2 = (TBcd)nodeArrayList1.get(0);

        pelementtypeNode1 = new ABcdElementType(tbcdNode2);
        }
	nodeList.add(pelementtypeNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new25() /* reduce AStaticMultiplierComponentElementMultiplier */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PComponentElementMultiplier pcomponentelementmultiplierNode1;
        {
            // Block
        TLParen tlparenNode2;
        TIntegerLiteral tintegerliteralNode3;
        TRParen trparenNode4;
        tlparenNode2 = (TLParen)nodeArrayList1.get(0);
        tintegerliteralNode3 = (TIntegerLiteral)nodeArrayList2.get(0);
        trparenNode4 = (TRParen)nodeArrayList3.get(0);

        pcomponentelementmultiplierNode1 = new AStaticMultiplierComponentElementMultiplier(tlparenNode2, tintegerliteralNode3, trparenNode4);
        }
	nodeList.add(pcomponentelementmultiplierNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new26() /* reduce AContextMultiplierComponentElementMultiplier */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PComponentElementMultiplier pcomponentelementmultiplierNode1;
        {
            // Block
        TLParen tlparenNode2;
        TIdentifier tidentifierNode3;
        TRParen trparenNode4;
        tlparenNode2 = (TLParen)nodeArrayList1.get(0);
        tidentifierNode3 = (TIdentifier)nodeArrayList2.get(0);
        trparenNode4 = (TRParen)nodeArrayList3.get(0);

        pcomponentelementmultiplierNode1 = new AContextMultiplierComponentElementMultiplier(tlparenNode2, tidentifierNode3, trparenNode4);
        }
	nodeList.add(pcomponentelementmultiplierNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new27() /* reduce AComponentElementName */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PComponentElementName pcomponentelementnameNode1;
        {
            // Block
        TLBrace tlbraceNode2;
        TIdentifier tidentifierNode3;
        TRBrace trbraceNode4;
        tlbraceNode2 = (TLBrace)nodeArrayList1.get(0);
        tidentifierNode3 = (TIdentifier)nodeArrayList2.get(0);
        trbraceNode4 = (TRBrace)nodeArrayList3.get(0);

        pcomponentelementnameNode1 = new AComponentElementName(tlbraceNode2, tidentifierNode3, trbraceNode4);
        }
	nodeList.add(pcomponentelementnameNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new28() /* reduce AComponentElementContextName */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PComponentElementContextName pcomponentelementcontextnameNode1;
        {
            // Block
        TLBracket tlbracketNode2;
        TIdentifier tidentifierNode3;
        TRBracket trbracketNode4;
        tlbracketNode2 = (TLBracket)nodeArrayList1.get(0);
        tidentifierNode3 = (TIdentifier)nodeArrayList2.get(0);
        trbracketNode4 = (TRBracket)nodeArrayList3.get(0);

        pcomponentelementcontextnameNode1 = new AComponentElementContextName(tlbracketNode2, tidentifierNode3, trbracketNode4);
        }
	nodeList.add(pcomponentelementcontextnameNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new29() /* reduce ATerminal$ComponentDefinition */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PComponentDefinition pcomponentdefinitionNode1;
        pcomponentdefinitionNode1 = (PComponentDefinition)nodeArrayList1.get(0);
	if(pcomponentdefinitionNode1 != null)
	{
	  listNode2.add(pcomponentdefinitionNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new30() /* reduce ANonTerminal$ComponentDefinition */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PComponentDefinition pcomponentdefinitionNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pcomponentdefinitionNode2 = (PComponentDefinition)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pcomponentdefinitionNode2 != null)
	{
	  listNode3.add(pcomponentdefinitionNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    private static int[][][] actionTable;
/*      {
			{{-1, ERROR, 0}, {0, SHIFT, 1}, },
			{{-1, ERROR, 1}, {11, SHIFT, 5}, },
			{{-1, ERROR, 2}, {26, ACCEPT, -1}, },
			{{-1, ERROR, 3}, {20, SHIFT, 6}, },
			{{-1, ERROR, 4}, {1, SHIFT, 10}, {2, SHIFT, 11}, },
			{{-1, ERROR, 5}, {21, SHIFT, 14}, },
			{{-1, ERROR, 6}, {19, SHIFT, 15}, },
			{{-1, REDUCE, 0}, },
			{{-1, REDUCE, 29}, },
			{{-1, REDUCE, 6}, {20, SHIFT, 6}, },
			{{-1, ERROR, 10}, {11, SHIFT, 17}, },
			{{-1, ERROR, 11}, {11, SHIFT, 18}, },
			{{-1, ERROR, 12}, {1, SHIFT, 10}, },
			{{-1, REDUCE, 1}, },
			{{-1, ERROR, 14}, {12, SHIFT, 20}, },
			{{-1, ERROR, 15}, {3, SHIFT, 21}, {4, SHIFT, 22}, {5, SHIFT, 23}, {6, SHIFT, 24}, {7, SHIFT, 25}, {20, SHIFT, 26}, {22, SHIFT, 27}, {24, SHIFT, 28}, },
			{{-1, REDUCE, 30}, },
			{{-1, ERROR, 17}, {20, SHIFT, 33}, },
			{{-1, ERROR, 18}, {22, SHIFT, 34}, },
			{{-1, REDUCE, 2}, },
			{{-1, ERROR, 20}, {18, SHIFT, 35}, },
			{{-1, REDUCE, 14}, },
			{{-1, REDUCE, 21}, },
			{{-1, REDUCE, 22}, },
			{{-1, REDUCE, 23}, },
			{{-1, REDUCE, 24}, },
			{{-1, REDUCE, 20}, },
			{{-1, REDUCE, 17}, },
			{{-1, REDUCE, 18}, },
			{{-1, ERROR, 29}, {9, SHIFT, 36}, {18, SHIFT, 37}, },
			{{-1, REDUCE, 8}, },
			{{-1, REDUCE, 10}, {11, SHIFT, 38}, {13, SHIFT, 39}, {16, SHIFT, 40}, },
			{{-1, REDUCE, 19}, },
			{{-1, ERROR, 33}, {12, SHIFT, 45}, },
			{{-1, ERROR, 34}, {12, SHIFT, 46}, },
			{{-1, REDUCE, 3}, },
			{{-1, ERROR, 36}, {3, SHIFT, 21}, {4, SHIFT, 22}, {5, SHIFT, 23}, {6, SHIFT, 24}, {7, SHIFT, 25}, {20, SHIFT, 26}, {22, SHIFT, 27}, {24, SHIFT, 28}, },
			{{-1, REDUCE, 7}, },
			{{-1, ERROR, 38}, {20, SHIFT, 48}, {23, SHIFT, 49}, },
			{{-1, ERROR, 39}, {20, SHIFT, 50}, },
			{{-1, ERROR, 40}, {20, SHIFT, 51}, },
			{{-1, REDUCE, 11}, {13, SHIFT, 39}, },
			{{-1, REDUCE, 15}, },
			{{-1, REDUCE, 12}, },
			{{-1, REDUCE, 16}, },
			{{-1, ERROR, 45}, {18, SHIFT, 53}, },
			{{-1, ERROR, 46}, {18, SHIFT, 54}, },
			{{-1, REDUCE, 9}, },
			{{-1, ERROR, 48}, {12, SHIFT, 55}, },
			{{-1, ERROR, 49}, {12, SHIFT, 56}, },
			{{-1, ERROR, 50}, {14, SHIFT, 57}, },
			{{-1, ERROR, 51}, {17, SHIFT, 58}, },
			{{-1, REDUCE, 13}, },
			{{-1, REDUCE, 5}, },
			{{-1, REDUCE, 4}, },
			{{-1, REDUCE, 26}, },
			{{-1, REDUCE, 25}, },
			{{-1, REDUCE, 27}, },
			{{-1, REDUCE, 28}, },
        };*/
    private static int[][][] gotoTable;
/*      {
			{{-1, 2}, },
			{{-1, 3}, },
			{{-1, 4}, },
			{{-1, 12}, },
			{{-1, 13}, {12, 19}, },
			{{-1, 7}, },
			{{-1, 8}, {9, 16}, },
			{{-1, 29}, },
			{{-1, 30}, {36, 47}, },
			{{-1, 41}, },
			{{-1, 31}, },
			{{-1, 32}, },
			{{-1, 42}, },
			{{-1, 43}, {41, 52}, },
			{{-1, 44}, },
			{{-1, 9}, },
        };*/
    private static String[] errorMessages;
/*      {
			"expecting: definition identifier",
			"expecting: '('",
			"expecting: EOF",
			"expecting: identifier",
			"expecting: start, output path",
			"expecting: package identifier",
			"expecting: '::='",
			"expecting: identifier, EOF",
			"expecting: start",
			"expecting: ')'",
			"expecting: eof, byte, integer, long, bcd, identifier, character literal, hex literal",
			"expecting: character literal",
			"expecting: ';'",
			"expecting: ',', ';'",
			"expecting: ',', '(', '{', '[', ';'",
			"expecting: identifier, integer literal",
			"expecting: ',', '{', ';'",
			"expecting: '}'",
			"expecting: ']'",
        };*/
    private static int[] errors;
/*      {
			0, 1, 2, 3, 4, 5, 6, 2, 7, 7, 1, 1, 8, 3, 9, 10, 7, 3, 11, 3, 12, 13, 14, 14, 14, 14, 14, 14, 14, 13, 13, 14, 14, 9, 9, 4, 10, 7, 15, 3, 3, 16, 16, 13, 16, 12, 12, 13, 9, 9, 17, 18, 13, 3, 8, 16, 16, 13, 16, 
        };*/

    static 
    {
        try
        {
            DataInputStream s = new DataInputStream(
                new BufferedInputStream(
                Parser.class.getResourceAsStream("parser.dat")));

            // read actionTable
            int length = s.readInt();
            Parser.actionTable = new int[length][][];
            for(int i = 0; i < Parser.actionTable.length; i++)
            {
                length = s.readInt();
                Parser.actionTable[i] = new int[length][3];
                for(int j = 0; j < Parser.actionTable[i].length; j++)
                {
                for(int k = 0; k < 3; k++)
                {
                    Parser.actionTable[i][j][k] = s.readInt();
                }
                }
            }

            // read gotoTable
            length = s.readInt();
            gotoTable = new int[length][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][2];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                for(int k = 0; k < 2; k++)
                {
                    gotoTable[i][j][k] = s.readInt();
                }
                }
            }

            // read errorMessages
            length = s.readInt();
            errorMessages = new String[length];
            for(int i = 0; i < errorMessages.length; i++)
            {
                length = s.readInt();
                StringBuffer buffer = new StringBuffer();

                for(int j = 0; j < length; j++)
                {
                buffer.append(s.readChar());
                }
                errorMessages[i] = buffer.toString();
            }

            // read errors
            length = s.readInt();
            errors = new int[length];
            for(int i = 0; i < errors.length; i++)
            {
                errors[i] = s.readInt();
            }

            s.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"parser.dat\" is either missing or corrupted.");
        }
    }
}
