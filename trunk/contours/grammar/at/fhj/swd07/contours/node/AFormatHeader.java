/* This file was generated by SableCC (http://www.sablecc.org/). */

package at.fhj.swd07.contours.node;

import at.fhj.swd07.contours.analysis.*;

@SuppressWarnings("nls")
public final class AFormatHeader extends PFormatHeader
{
    private PDefinitionPackageIdentifier _definitionPackageIdentifier_;
    private POutputPath _outputPath_;
    private PStartComponent _startComponent_;

    public AFormatHeader()
    {
        // Constructor
    }

    public AFormatHeader(
        @SuppressWarnings("hiding") PDefinitionPackageIdentifier _definitionPackageIdentifier_,
        @SuppressWarnings("hiding") POutputPath _outputPath_,
        @SuppressWarnings("hiding") PStartComponent _startComponent_)
    {
        // Constructor
        setDefinitionPackageIdentifier(_definitionPackageIdentifier_);

        setOutputPath(_outputPath_);

        setStartComponent(_startComponent_);

    }

    @Override
    public Object clone()
    {
        return new AFormatHeader(
            cloneNode(this._definitionPackageIdentifier_),
            cloneNode(this._outputPath_),
            cloneNode(this._startComponent_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAFormatHeader(this);
    }

    public PDefinitionPackageIdentifier getDefinitionPackageIdentifier()
    {
        return this._definitionPackageIdentifier_;
    }

    public void setDefinitionPackageIdentifier(PDefinitionPackageIdentifier node)
    {
        if(this._definitionPackageIdentifier_ != null)
        {
            this._definitionPackageIdentifier_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._definitionPackageIdentifier_ = node;
    }

    public POutputPath getOutputPath()
    {
        return this._outputPath_;
    }

    public void setOutputPath(POutputPath node)
    {
        if(this._outputPath_ != null)
        {
            this._outputPath_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._outputPath_ = node;
    }

    public PStartComponent getStartComponent()
    {
        return this._startComponent_;
    }

    public void setStartComponent(PStartComponent node)
    {
        if(this._startComponent_ != null)
        {
            this._startComponent_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._startComponent_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._definitionPackageIdentifier_)
            + toString(this._outputPath_)
            + toString(this._startComponent_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._definitionPackageIdentifier_ == child)
        {
            this._definitionPackageIdentifier_ = null;
            return;
        }

        if(this._outputPath_ == child)
        {
            this._outputPath_ = null;
            return;
        }

        if(this._startComponent_ == child)
        {
            this._startComponent_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._definitionPackageIdentifier_ == oldChild)
        {
            setDefinitionPackageIdentifier((PDefinitionPackageIdentifier) newChild);
            return;
        }

        if(this._outputPath_ == oldChild)
        {
            setOutputPath((POutputPath) newChild);
            return;
        }

        if(this._startComponent_ == oldChild)
        {
            setStartComponent((PStartComponent) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
